FROM public.ecr.aws/docker/library/node:16.10.0-alpine3.11 AS base

ARG NODE_ENV=production
ENV NODE_ENV=$NODE_ENV

ARG DB_SERVER
ARG DB_PORT
ARG DB_DATABASE
ARG DB_USER
ARG DB_PASSWORD

ARG DATADOG_APIKEY
ARG DATADOG_APPLICATIONKEY
ARG DATADOG_VERSION
ARG DATADOG_SERVICE
ARG DATADOG_AGENT_HOST
ARG DATADOG_TRACE_AGENT_PORT

ARG INFRA_ENVIRONMENT

ARG SERVER_PORT=8000

ENV DB_SERVER $DB_SERVER
ENV DB_PORT $DB_PORT
ENV DB_DATABASE $DB_DATABASE
ENV DB_USER $DB_USER
ENV DB_PASSWORD $DB_PASSWORD

ENV DD_APM_NON_LOCAL_TRAFFIC true
ENV DD_API_KEY $DATADOG_APIKEY
ENV DD_APPLICATION_KEY $DATADOG_APPLICATIONKEY
ENV DD_VERSION $DATADOG_VERSION
ENV DD_ENV $INFRA_ENVIRONMENT
ENV DD_APM_ENABLED true
ENV DD_SERVICE $DATADOG_SERVICE
ENV DD_AGENT_HOST $DATADOG_AGENT_HOST
ENV DD_TRACE_AGENT_PORT $DATADOG_TRACE_AGENT_PORT

ENV SERVER_PORT $SERVER_PORT

RUN mkdir -p /opt/node_app/app
WORKDIR /opt/node_app

COPY package.json package-lock.json* ./
RUN npm install --no-optional && npm cache clean --force && npm update --force
ENV PATH /opt/node_app/node_modules/.bin:$PATH

WORKDIR /opt/node_app/app
COPY . .

RUN npx prisma generate

EXPOSE 8000 5555

FROM base as dev

RUN apk add --no-cache mysql-client

CMD ["npm", "run", "dev"]

FROM base as ci

# TEMPORÁRIO, ENQUANTO NÃO RESOLVE O BUG DO ARQUIVO .ENV NO PRISMA
ENV DATABASE_URL=mysql://$DB_USER:$DB_PASSWORD@$DB_SERVER:$DB_PORT/$DB_DATABASE?connection_limit=100&pool_timeout=10

RUN apk add --no-cache mysql-client

FROM base as prod

CMD ["npm", "run", "start"]